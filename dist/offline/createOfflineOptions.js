"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _buildEffect = _interopRequireDefault(require("./buildEffect"));
var _buildDiscard = _interopRequireDefault(require("./buildDiscard"));
var _buildDetectNetwork = _interopRequireDefault(require("./buildDetectNetwork"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var _default =

function _default(reduxWorkOptions, transportOptions, offlineOptions) {
  var effect = (0, _buildEffect.default)(reduxWorkOptions, transportOptions);
  var discard = (0, _buildDiscard.default)(reduxWorkOptions, transportOptions);
  var detectNetwork = (0, _buildDetectNetwork.default)(reduxWorkOptions, transportOptions);
  return _objectSpread({},
  offlineOptions, {
    effect: effect,
    discard: discard,
    detectNetwork: detectNetwork });

};exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9vZmZsaW5lL2NyZWF0ZU9mZmxpbmVPcHRpb25zLmpzIl0sIm5hbWVzIjpbInJlZHV4V29ya09wdGlvbnMiLCJ0cmFuc3BvcnRPcHRpb25zIiwib2ZmbGluZU9wdGlvbnMiLCJlZmZlY3QiLCJkaXNjYXJkIiwiZGV0ZWN0TmV0d29yayJdLCJtYXBwaW5ncyI6Im9HQUFBO0FBQ0E7QUFDQSxrRjs7QUFFZSxrQkFBQ0EsZ0JBQUQsRUFBbUJDLGdCQUFuQixFQUFxQ0MsY0FBckMsRUFBd0Q7QUFDckUsTUFBTUMsTUFBTSxHQUFHLDBCQUFZSCxnQkFBWixFQUE4QkMsZ0JBQTlCLENBQWY7QUFDQSxNQUFNRyxPQUFPLEdBQUcsMkJBQWFKLGdCQUFiLEVBQStCQyxnQkFBL0IsQ0FBaEI7QUFDQSxNQUFNSSxhQUFhLEdBQUcsaUNBQW1CTCxnQkFBbkIsRUFBcUNDLGdCQUFyQyxDQUF0QjtBQUNBO0FBQ0tDLEVBQUFBLGNBREw7QUFFRUMsSUFBQUEsTUFBTSxFQUFOQSxNQUZGO0FBR0VDLElBQUFBLE9BQU8sRUFBUEEsT0FIRjtBQUlFQyxJQUFBQSxhQUFhLEVBQWJBLGFBSkY7O0FBTUQsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBidWlsZEVmZmVjdCBmcm9tICcuL2J1aWxkRWZmZWN0JztcclxuaW1wb3J0IGJ1aWxkRGlzY2FyZCBmcm9tICcuL2J1aWxkRGlzY2FyZCc7XHJcbmltcG9ydCBidWlsZERldGVjdE5ldHdvcmsgZnJvbSAnLi9idWlsZERldGVjdE5ldHdvcmsnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgKHJlZHV4V29ya09wdGlvbnMsIHRyYW5zcG9ydE9wdGlvbnMsIG9mZmxpbmVPcHRpb25zKSA9PiB7XHJcbiAgY29uc3QgZWZmZWN0ID0gYnVpbGRFZmZlY3QocmVkdXhXb3JrT3B0aW9ucywgdHJhbnNwb3J0T3B0aW9ucyk7XHJcbiAgY29uc3QgZGlzY2FyZCA9IGJ1aWxkRGlzY2FyZChyZWR1eFdvcmtPcHRpb25zLCB0cmFuc3BvcnRPcHRpb25zKTtcclxuICBjb25zdCBkZXRlY3ROZXR3b3JrID0gYnVpbGREZXRlY3ROZXR3b3JrKHJlZHV4V29ya09wdGlvbnMsIHRyYW5zcG9ydE9wdGlvbnMpO1xyXG4gIHJldHVybiB7XHJcbiAgICAuLi5vZmZsaW5lT3B0aW9ucyxcclxuICAgIGVmZmVjdCxcclxuICAgIGRpc2NhcmQsXHJcbiAgICBkZXRlY3ROZXR3b3JrXHJcbiAgfTtcclxufTsiXX0=