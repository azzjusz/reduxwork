"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _dispatchAction = _interopRequireDefault(require("./dispatchAction"));
var _buildFetchOptions = _interopRequireDefault(require("./buildFetchOptions"));
var _buildUrl = _interopRequireDefault(require("./buildUrl"));
var _getFetchMethod = _interopRequireDefault(require("./getFetchMethod"));
var _createAction = require("./createAction");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var dispatchToFetch = function dispatchToFetch(options, action) {var
  fetch = options.fetch;

  if (!fetch)
  throw new Error('Reduxwork: fetch is not configured.');

  return (0, _dispatchAction.default)(options, action, function (serverAction, dispatch, resolve, reject) {
    var fetchMethod = (0, _getFetchMethod.default)(options, action);
    fetch(
    (0, _buildUrl.default)(options, serverAction, fetchMethod),
    (0, _buildFetchOptions.default)(options, serverAction, fetchMethod)).
    then(function (response) {
      if (response.ok)
      return response.json();else
      {
        var error = response.json();
        dispatch((0, _createAction.extendActionFailed)(action, error));
        return reject(error);
      }
    }).then(function (data) {
      //if (data && data._tempId) completedAction._tempId = data._tempId;
      //if (data && typeof data._rewrite !== 'undefined') completedAction._rewrite = data._rewrite;
      dispatch((0, _createAction.extendActionCompleted)(action, data));
      return resolve(data);
    });
  });
};var _default =

dispatchToFetch;exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvZGlzcGF0Y2hUb0ZldGNoLmpzIl0sIm5hbWVzIjpbImRpc3BhdGNoVG9GZXRjaCIsIm9wdGlvbnMiLCJhY3Rpb24iLCJmZXRjaCIsIkVycm9yIiwic2VydmVyQWN0aW9uIiwiZGlzcGF0Y2giLCJyZXNvbHZlIiwicmVqZWN0IiwiZmV0Y2hNZXRob2QiLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsImpzb24iLCJlcnJvciIsImRhdGEiXSwibWFwcGluZ3MiOiJvR0FBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDOztBQUVBLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ25DQyxFQUFBQSxLQURtQyxHQUN6QkYsT0FEeUIsQ0FDbkNFLEtBRG1DOztBQUczQyxNQUFJLENBQUNBLEtBQUw7QUFDRSxRQUFNLElBQUlDLEtBQUosQ0FBVSxxQ0FBVixDQUFOOztBQUVGLFNBQU8sNkJBQWVILE9BQWYsRUFBd0JDLE1BQXhCLEVBQWdDLFVBQUNHLFlBQUQsRUFBZUMsUUFBZixFQUF5QkMsT0FBekIsRUFBa0NDLE1BQWxDLEVBQTZDO0FBQ2xGLFFBQU1DLFdBQVcsR0FBRyw2QkFBZVIsT0FBZixFQUF3QkMsTUFBeEIsQ0FBcEI7QUFDQUMsSUFBQUEsS0FBSztBQUNILDJCQUFTRixPQUFULEVBQWtCSSxZQUFsQixFQUFnQ0ksV0FBaEMsQ0FERztBQUVILG9DQUFrQlIsT0FBbEIsRUFBMkJJLFlBQTNCLEVBQXlDSSxXQUF6QyxDQUZHLENBQUw7QUFHRUMsSUFBQUEsSUFIRixDQUdPLFVBQUFDLFFBQVEsRUFBSTtBQUNqQixVQUFJQSxRQUFRLENBQUNDLEVBQWI7QUFDRSxhQUFPRCxRQUFRLENBQUNFLElBQVQsRUFBUCxDQURGO0FBRUs7QUFDSCxZQUFNQyxLQUFLLEdBQUdILFFBQVEsQ0FBQ0UsSUFBVCxFQUFkO0FBQ0FQLFFBQUFBLFFBQVEsQ0FBQyxzQ0FBbUJKLE1BQW5CLEVBQTJCWSxLQUEzQixDQUFELENBQVI7QUFDQSxlQUFPTixNQUFNLENBQUNNLEtBQUQsQ0FBYjtBQUNEO0FBQ0YsS0FYRCxFQVdHSixJQVhILENBV1EsVUFBQUssSUFBSSxFQUFJO0FBQ2Q7QUFDQTtBQUNBVCxNQUFBQSxRQUFRLENBQUMseUNBQXNCSixNQUF0QixFQUE4QmEsSUFBOUIsQ0FBRCxDQUFSO0FBQ0EsYUFBT1IsT0FBTyxDQUFDUSxJQUFELENBQWQ7QUFDRCxLQWhCRDtBQWlCRCxHQW5CTSxDQUFQO0FBb0JELENBMUJELEM7O0FBNEJlZixlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRpc3BhdGNoQWN0aW9uIGZyb20gJy4vZGlzcGF0Y2hBY3Rpb24nO1xyXG5pbXBvcnQgYnVpbGRGZXRjaE9wdGlvbnMgZnJvbSAnLi9idWlsZEZldGNoT3B0aW9ucyc7XHJcbmltcG9ydCBidWlsZFVybCBmcm9tICcuL2J1aWxkVXJsJztcclxuaW1wb3J0IGdldEZldGNoTWV0aG9kIGZyb20gJy4vZ2V0RmV0Y2hNZXRob2QnO1xyXG5pbXBvcnQgeyBleHRlbmRBY3Rpb25GYWlsZWQsIGV4dGVuZEFjdGlvbkNvbXBsZXRlZCB9IGZyb20gJy4vY3JlYXRlQWN0aW9uJztcclxuXHJcbmNvbnN0IGRpc3BhdGNoVG9GZXRjaCA9IChvcHRpb25zLCBhY3Rpb24pID0+IHtcclxuICBjb25zdCB7IGZldGNoIH0gPSBvcHRpb25zO1xyXG5cclxuICBpZiAoIWZldGNoKVxyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdSZWR1eHdvcms6IGZldGNoIGlzIG5vdCBjb25maWd1cmVkLicpO1xyXG5cclxuICByZXR1cm4gZGlzcGF0Y2hBY3Rpb24ob3B0aW9ucywgYWN0aW9uLCAoc2VydmVyQWN0aW9uLCBkaXNwYXRjaCwgcmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICBjb25zdCBmZXRjaE1ldGhvZCA9IGdldEZldGNoTWV0aG9kKG9wdGlvbnMsIGFjdGlvbik7XHJcbiAgICBmZXRjaChcclxuICAgICAgYnVpbGRVcmwob3B0aW9ucywgc2VydmVyQWN0aW9uLCBmZXRjaE1ldGhvZCksXHJcbiAgICAgIGJ1aWxkRmV0Y2hPcHRpb25zKG9wdGlvbnMsIHNlcnZlckFjdGlvbiwgZmV0Y2hNZXRob2QpXHJcbiAgICApLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICBpZiAocmVzcG9uc2Uub2spXHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3IgPSByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgZGlzcGF0Y2goZXh0ZW5kQWN0aW9uRmFpbGVkKGFjdGlvbiwgZXJyb3IpKTtcclxuICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfSkudGhlbihkYXRhID0+IHtcclxuICAgICAgLy9pZiAoZGF0YSAmJiBkYXRhLl90ZW1wSWQpIGNvbXBsZXRlZEFjdGlvbi5fdGVtcElkID0gZGF0YS5fdGVtcElkO1xyXG4gICAgICAvL2lmIChkYXRhICYmIHR5cGVvZiBkYXRhLl9yZXdyaXRlICE9PSAndW5kZWZpbmVkJykgY29tcGxldGVkQWN0aW9uLl9yZXdyaXRlID0gZGF0YS5fcmV3cml0ZTtcclxuICAgICAgZGlzcGF0Y2goZXh0ZW5kQWN0aW9uQ29tcGxldGVkKGFjdGlvbiwgZGF0YSkpO1xyXG4gICAgICByZXR1cm4gcmVzb2x2ZShkYXRhKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGlzcGF0Y2hUb0ZldGNoOyJdfQ==